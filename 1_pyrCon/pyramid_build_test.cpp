#include <stdio.h>
#include <string.h>
#include "pyr.h"

//#define USESTB

#ifdef USESTB

#define STB_IMAGE_IMPLEMENTATION
#include "../common/stb_image.h"

#define STB_IMAGE_RESIZE_IMPLEMENTATION
#include "../common/stb_image_resize.h"



#endif
const data_in_t in0[512] = {  0.99352,0.99559,0.98494,0.97864,0.99649,0.99544,0.99138,0.99216,0.98558,0.99608,0.99573,0.96217,0.95131,0.9558,0.95294,0.99231,0.99231,0.95294,0.9558,0.95131,0.96217,0.99573,0.99608,0.98558,0.99216,0.99138,0.99544,0.99649,0.97864,0.98494,0.99559,0.99352,0.99409,0.99731,0.97124,0.96268,0.9926,0.9348,0.95363,0.98102,0.98532,0.94402,0.96532,0.9924,0.96776,0.93538,0.89738,0.89655,0.81377,0.95592,0.99362,0.99675,0.99152,0.95177,0.92354,0.91956,0.95782,0.95654,0.97729,0.99174,0.94455,0.98384,0.96265,0.93753,0.90149,0.85469,0.77721,0.75658,0.77277,0.69557,0.62512,0.59482,0.57372,0.60577,0.74359,0.67694,0.6201,0.60378,0.6259,0.62045,0.62564,0.61996,0.64407,0.6344,0.63147,0.63318,0.63103,0.61589,0.58488,0.58755,0.58014,0.56718,0.54451,0.52541,0.5368,0.54506,0.53343,0.51936,0.51906,0.52969,0.54117,0.54544,0.53847,0.52057,0.51358,0.52411,0.55229,0.53999,0.54893,0.57004,0.55696,0.5423,0.52972,0.52333,0.52383,0.52724,0.498,0.50883,0.51854,0.49728,0.48157,0.46999,0.46094,0.45093,0.44933,0.45966,0.44948,0.42397,0.41508,0.42189,0.44106,0.43842,0.44466,0.44762,0.43376,0.4247,0.42189,0.43039,0.44301,0.43478,0.42473,0.49802,0.61948,0.67383,0.69986,0.6819,0.6897,0.68803,0.67818,0.52954,0.49649,0.90344,0.99962,0.91772,0.96324,0.87045,0.80168,0.89757,0.92632,0.83716,0.89815,0.92488,0.90643,0.8465,0.86241,0.92329,0.95062,0.89273,0.86676,0.88972,0.87773,0.85432,0.88458,0.9008,0.83411,0.8333,0.83926,0.81313,0.7224,0.76955,0.71815,0.77431,0.81953,0.75995,0.76291,0.74109,0.79333,0.80489,0.73494,0.68996,0.70934,0.7485,0.72145,0.73994,0.74983,0.71397,0.75418,0.70749,0.71872,0.69173,0.79829,0.82674,0.78769,0.8112,0.80354,0.71564,0.68636,0.7216,0.76744,0.77919,0.76393,0.75249,0.76469,0.69478,0.70534,0.71609,0.69066,0.60153,0.61995,0.66624,0.66924,0.68294,0.7191,0.6416,0.62071,0.44606,0.41534,0.86835,0.9129,0.70546,0.85486,0.8096,0.73912,0.77066,0.73146,0.68968,0.65779,0.70905,0.68729,0.72504,0.72939,0.72258,0.75302,0.72481,0.68973,0.69025,0.66684,0.715,0.67899,0.60115,0.62437,0.64755,0.5867,0.64427,0.6387,0.58867,0.52704,0.53502,0.58253,0.53838,0.60704,0.60852,0.55353,0.64676,0.57251,0.57524,0.56741,0.62334,0.65076,0.61916,0.60353,0.60342,0.54451,0.53008,0.53607,0.58723,0.5959,0.58556,0.49928,0.61803,0.57112,0.5891,0.58223,0.56726,0.56113,0.63084,0.65173,0.59409,0.57855,0.6889,0.64958,0.60222,0.6171,0.60565,0.65634,0.60605,0.59967,0.58588,0.54189,0.51248,0.41281,0.42384,0.80374,0.74625,0.56929,0.58537,0.64288,0.6257,0.59743,0.5966,0.53499,0.44975,0.43683,0.45029,0.56177,0.54468,0.54776,0.53464,0.493,0.52614,0.51514,0.56969,0.52853,0.49319,0.51744,0.56015,0.56839,0.50711,0.49541,0.58289,0.64626,0.62369,0.58109,0.54245,0.55501,0.53891,0.55145,0.56351,0.52414,0.51024,0.49937,0.51059,0.49158,0.46916,0.46013,0.45218,0.46817,0.49013,0.41623,0.48187,0.54912,0.55034,0.55565,0.5715,0.53783,0.45741,0.52229,0.521,0.46591,0.45021,0.44293,0.44574,0.45647,0.44333,0.42517,0.42294,0.39816,0.39272,0.44302,0.44261,0.45808,0.52115,0.49789,0.49173,0.44432,0.50308,0.74152,0.84509,0.62622,0.5947,0.74155,0.71506,0.70326,0.7075,0.71611,0.73396,0.74466,0.66357,0.66504,0.63985,0.63766,0.72987,0.69392,0.65475,0.60851,0.58258,0.68567,0.67273,0.66124,0.66985,0.81465,0.78468,0.6283,0.52861,0.48894,0.44948,0.39404,0.33939,0.2876,0.27228,0.25653,0.23668,0.23763,0.23383,0.21738,0.22285,0.17955,0.16048,0.13387,0.13029,0.13475,0.18874,0.14763,0.13577,0.12802,0.11769,0.12041,0.10896,0.14255,0.15054,0.13521,0.1019,0.095627,0.10164,0.093674,0.079346,0.091522,0.12843,0.10023,0.092697,0.096298,0.1116,0.10355,0.10294,0.10321,0.10139,0.095703,0.090149,0.085358,0.10042,0.11339,0.085464,0.005722,0.067276,0.29176,0.27638,0.13586,0.10159,0.082611,0.077774,0.089066,0.091019,0.085968,0.069168,0.047165,0.053421,0.04837,0.049576,0.05336,0.055405,0.054367,0.05835,0.053421,0.040024,0.033463,0.02861,0.032318,0.03418,0.036407,0.035294,0.033081,0.025543,0.0289,0.031052,0.023392,0.016495,0.01709,0.016495,0.024582,0.017349,0.013611,0.016327,0.022751,0.019409,0.011932,0.0079803,0.0079803,0.011932,0.019409,0.022751,0.016327,0.013611,0.017349,0.024582,0.016495,0.01709,0.016495,0.023392,0.031052,0.0289,0.025543,0.033081};
const data_in_t in1[512] = {  0.9979,0.99903,0.99326,0.99191,1.0002,0.9983,1.0009,0.99193,0.98506,1.0007,1.0025,0.97301,0.95666,0.96717,0.96682,0.99824,0.99824,0.96682,0.96717,0.95666,0.97301,1.0025,1.0007,0.98506,0.99193,1.0009,0.9983,1.0002,0.99191,0.99326,0.99903,0.9979,0.9992,0.99997,0.97505,0.96757,0.99694,0.9396,0.94971,0.98627,0.98701,0.93948,0.9528,0.98752,0.94787,0.9288,0.90121,0.91559,0.81778,0.95536,0.99905,1.0005,0.98941,0.9513,0.92779,0.92756,0.95674,0.95864,0.98462,0.99683,0.95165,0.98721,0.96347,0.92112,0.90041,0.85611,0.78825,0.76886,0.78464,0.74128,0.65495,0.60648,0.58039,0.59865,0.74427,0.68761,0.62587,0.60685,0.63001,0.62261,0.62979,0.6227,0.6483,0.63707,0.63001,0.63392,0.63739,0.62183,0.58945,0.59334,0.58634,0.57391,0.55057,0.53131,0.53703,0.54501,0.53534,0.52564,0.52569,0.5348,0.54346,0.549,0.54329,0.53002,0.52022,0.53195,0.56225,0.55314,0.55567,0.57558,0.55561,0.54101,0.54082,0.53752,0.5373,0.53816,0.51267,0.52112,0.52877,0.50767,0.48421,0.46803,0.45878,0.44877,0.44712,0.45761,0.45299,0.42952,0.41697,0.4235,0.44278,0.44027,0.4447,0.44893,0.43551,0.42664,0.42014,0.43114,0.4451,0.4401,0.43058,0.50804,0.63096,0.68401,0.70657,0.68513,0.68108,0.6867,0.69047,0.55401,0.48393,0.88552,1.005,0.91094,0.96651,0.89102,0.80018,0.89885,0.93329,0.8312,0.88464,0.92696,0.91823,0.85116,0.85578,0.92126,0.9491,0.89073,0.85129,0.89061,0.88326,0.8507,0.87996,0.90444,0.83719,0.8392,0.84591,0.81428,0.73248,0.77721,0.72125,0.76953,0.81166,0.76578,0.76435,0.73378,0.78238,0.79951,0.74429,0.69332,0.71173,0.76176,0.73228,0.73935,0.76474,0.73555,0.75421,0.71938,0.73174,0.68932,0.77469,0.83847,0.78416,0.80473,0.80348,0.72649,0.6797,0.71161,0.76749,0.77523,0.76648,0.74102,0.74753,0.69933,0.693,0.70682,0.6864,0.61126,0.61749,0.66578,0.6699,0.70689,0.71659,0.64709,0.61376,0.50939,0.36973,0.83713,0.96832,0.7066,0.79467,0.79974,0.74404,0.78539,0.76463,0.72561,0.66716,0.70786,0.67341,0.71556,0.73071,0.72206,0.75709,0.73237,0.68284,0.69338,0.66642,0.7116,0.69819,0.59758,0.62108,0.64288,0.55797,0.61955,0.62676,0.57008,0.53991,0.55219,0.60286,0.54427,0.59949,0.62373,0.53497,0.63715,0.5811,0.57531,0.58532,0.61791,0.6568,0.62721,0.61046,0.62074,0.56327,0.53203,0.53532,0.60198,0.60188,0.60933,0.5011,0.62183,0.57508,0.60397,0.59134,0.56495,0.56172,0.6362,0.64864,0.60015,0.57682,0.67247,0.66423,0.61592,0.62567,0.60473,0.66374,0.61521,0.60535,0.59634,0.55014,0.54813,0.46415,0.39887,0.75377,0.7871,0.59842,0.57754,0.64257,0.61981,0.61415,0.59874,0.55421,0.45964,0.43632,0.43451,0.5619,0.54714,0.54795,0.55268,0.51275,0.53361,0.52486,0.56081,0.54519,0.50936,0.52897,0.56501,0.56958,0.51198,0.49095,0.58362,0.64516,0.62989,0.59075,0.54256,0.55293,0.54537,0.5536,0.57022,0.51363,0.50057,0.48787,0.49992,0.48655,0.47065,0.46612,0.46705,0.47413,0.49801,0.43264,0.4708,0.5688,0.55437,0.54773,0.55892,0.55486,0.46841,0.51737,0.52756,0.47517,0.44833,0.44646,0.44922,0.46275,0.45879,0.43085,0.41852,0.39168,0.39248,0.44701,0.4417,0.44101,0.51774,0.49323,0.49634,0.45881,0.46766,0.71664,0.8574,0.64219,0.57371,0.72695,0.72083,0.71607,0.72002,0.7169,0.72935,0.75522,0.67865,0.66847,0.66301,0.63185,0.72934,0.7026,0.65737,0.62711,0.57672,0.67416,0.66757,0.63914,0.67584,0.79781,0.73752,0.59775,0.50697,0.4795,0.44761,0.38992,0.3366,0.2958,0.27584,0.25574,0.23611,0.23028,0.23258,0.21118,0.21445,0.17419,0.16026,0.13776,0.12665,0.12647,0.18856,0.14677,0.14173,0.12731,0.11377,0.11887,0.1097,0.14888,0.15095,0.13188,0.10677,0.10141,0.10193,0.096446,0.085248,0.091468,0.12757,0.10983,0.10136,0.098713,0.11374,0.10199,0.097442,0.10005,0.10198,0.097871,0.090104,0.082031,0.096844,0.11101,0.067356,0.0053615,0.11725,0.32947,0.25365,0.12109,0.097947,0.08508,0.085003,0.094638,0.090916,0.086305,0.069301,0.048912,0.055775,0.048958,0.049678,0.053876,0.059023,0.054749,0.060233,0.054075,0.040135,0.033594,0.028722,0.032445,0.034314,0.03655,0.035432,0.033211,0.025643,0.029013,0.031173,0.023483,0.016559,0.017157,0.016559,0.024678,0.017417,0.013388,0.019792,0.023729,0.019393,0.011979,0.0080116,0.0080116,0.011979,0.019393,0.023729,0.019792,0.013388,0.017417,0.024678,0.016559,0.017157,0.016559,0.023483,0.031173,0.029013,0.025643,0.033211};
const data_in_t in2[512] = {  0.9996,0.99862,0.99629,0.99741,1.0004,0.9983,1.001,0.98372,0.97282,0.99666,1.0007,0.97166,0.96059,0.97636,0.97745,0.99965,0.99965,0.97745,0.97636,0.96059,0.97166,1.0007,0.99666,0.97282,0.98372,1.001,0.9983,1.0004,0.99741,0.99629,0.99862,0.9996,0.99983,0.99805,0.96932,0.96933,0.99478,0.94422,0.94488,0.97756,0.9862,0.93183,0.929,0.96953,0.94531,0.92973,0.90723,0.92597,0.81824,0.96051,0.99907,0.98842,0.98183,0.95038,0.92595,0.93088,0.95339,0.95394,0.98888,0.99847,0.95622,0.98572,0.96394,0.90918,0.89769,0.8655,0.79568,0.78145,0.7892,0.76877,0.69249,0.62658,0.58506,0.58892,0.74387,0.69464,0.62514,0.60918,0.62983,0.62256,0.63024,0.62454,0.64637,0.63802,0.6271,0.63338,0.6394,0.62593,0.59341,0.59695,0.5869,0.57708,0.55283,0.53555,0.53876,0.54704,0.54324,0.53165,0.53532,0.54395,0.54845,0.54868,0.54145,0.53146,0.51857,0.52976,0.56244,0.55319,0.55541,0.57192,0.55146,0.539,0.54145,0.53922,0.53712,0.5386,0.51437,0.52112,0.52702,0.50749,0.48796,0.47169,0.45953,0.45012,0.4434,0.45927,0.45705,0.43488,0.41768,0.42341,0.44278,0.44027,0.44452,0.45093,0.43935,0.4269,0.42005,0.4314,0.44876,0.44389,0.43646,0.51607,0.63894,0.69015,0.71452,0.68796,0.66641,0.67979,0.68984,0.56371,0.4733,0.86491,1.007,0.90754,0.96415,0.90974,0.79954,0.8881,0.93719,0.83598,0.88425,0.95455,0.9318,0.86314,0.84887,0.91536,0.95038,0.88263,0.83006,0.88344,0.88699,0.8496,0.8695,0.89894,0.84468,0.83903,0.83437,0.80677,0.73692,0.77996,0.7269,0.76158,0.79666,0.77405,0.76374,0.72031,0.77797,0.80314,0.747,0.69963,0.70862,0.76415,0.74899,0.72869,0.77339,0.73692,0.75691,0.73392,0.73454,0.68457,0.74974,0.8532,0.7849,0.78376,0.79012,0.7348,0.67797,0.69802,0.75944,0.76778,0.76247,0.72279,0.71382,0.70202,0.68039,0.70006,0.67498,0.61805,0.61631,0.66785,0.66507,0.72198,0.71855,0.65758,0.61867,0.56855,0.35184,0.81271,0.9915,0.71791,0.76129,0.80072,0.75653,0.78692,0.78888,0.74847,0.69678,0.68713,0.66487,0.70381,0.72953,0.72063,0.75498,0.73854,0.68667,0.69677,0.67082,0.7017,0.71684,0.59761,0.61052,0.6369,0.55751,0.61028,0.62953,0.55916,0.53722,0.56039,0.60441,0.54684,0.58632,0.62857,0.52494,0.61419,0.59013,0.57822,0.60011,0.60901,0.65964,0.6275,0.61846,0.62719,0.57534,0.53287,0.52682,0.59877,0.59914,0.62034,0.48125,0.62135,0.58477,0.61337,0.60146,0.55836,0.55435,0.63408,0.63969,0.60032,0.57119,0.64988,0.66468,0.61952,0.6182,0.60158,0.65916,0.62606,0.60384,0.59727,0.55221,0.56235,0.49401,0.38741,0.72002,0.81431,0.61633,0.57361,0.64403,0.61103,0.61489,0.59706,0.56653,0.47934,0.44426,0.43053,0.55129,0.55355,0.54943,0.5632,0.53078,0.52679,0.53488,0.54729,0.56009,0.52194,0.53808,0.55994,0.5646,0.52131,0.48891,0.56457,0.63972,0.63732,0.59825,0.54268,0.55018,0.55017,0.55404,0.56791,0.50705,0.4852,0.47892,0.49118,0.48356,0.47456,0.46391,0.46915,0.47823,0.50156,0.4426,0.45786,0.56334,0.54251,0.53096,0.54346,0.55666,0.4777,0.50821,0.53159,0.48321,0.45193,0.45052,0.45103,0.47045,0.47465,0.44044,0.41877,0.39162,0.39873,0.45483,0.44704,0.424,0.50892,0.49038,0.49715,0.48248,0.4544,0.67888,0.85881,0.65047,0.55244,0.70355,0.73047,0.7347,0.73122,0.71662,0.71976,0.75766,0.70061,0.67094,0.68271,0.62669,0.7154,0.71521,0.65541,0.65414,0.58614,0.65905,0.66578,0.63004,0.70487,0.81918,0.72298,0.59116,0.50158,0.47567,0.4445,0.38346,0.32808,0.28683,0.2752,0.25231,0.23058,0.22403,0.23045,0.2091,0.2072,0.17371,0.15896,0.14063,0.12817,0.12711,0.17898,0.14297,0.14818,0.13039,0.11238,0.1182,0.11189,0.15121,0.14839,0.13214,0.11281,0.10489,0.1025,0.099663,0.087439,0.089675,0.1256,0.11412,0.10722,0.10049,0.11423,0.10142,0.089614,0.097963,0.099923,0.097564,0.088986,0.081847,0.10075,0.10692,0.049724,0.0036612,0.15591,0.3396,0.23304,0.11397,0.098269,0.089461,0.088266,0.0928,0.088909,0.084115,0.069746,0.052757,0.057782,0.048912,0.047794,0.055622,0.061137,0.048897,0.05242,0.049709,0.038036,0.03606,0.029167,0.031817,0.03436,0.03655,0.035432,0.033211,0.025643,0.029013,0.031173,0.023483,0.016559,0.017157,0.016559,0.024632,0.01777,0.015839,0.024755,0.023897,0.019347,0.011979,0.0080116,0.0080116,0.011979,0.019347,0.023897,0.024755,0.015839,0.01777,0.024632,0.016559,0.017157,0.016559,0.023483,0.031173,0.029013,0.025643,0.033211};
const data_in_t in512[512] = {
		0.86557,0.97156,0.95586,0.87335,0.93069,0.94638,0.96461,0.96614,0.98756,0.95215,0.97169,0.82227,0.56601,0.64983,0.96336,0.99141,0.99141,0.96336,0.64983,0.56601,0.82227,0.97169,0.95215,0.98756,0.96614,0.96461,0.94638,0.93069,0.87335,0.95586,0.97156,0.86557,0.90866,0.93019,0.75587,0.92329,0.8228,0.7636,0.89154,0.88132,0.90088,0.82158,0.80838,0.86336,0.87935,0.92285,0.8871,0.90561,0.879,0.77728,0.70764,0.87665,0.83907,0.82768,0.79634,0.7588,0.83354,0.80833,0.7733,0.68246,0.63416,0.67668,0.6281,0.64505,0.66226,0.68478,0.76915,0.80548,0.83432,0.79889,0.76346,0.7076,0.62654,0.72438,0.73877,0.739,0.76917,0.62608,0.61322,0.65771,0.65002,0.55029,0.31747,0.23981,0.17764,0.14725,0.17059,0.12675,0.14838,0.2131,0.22432,0.20586,0.27814,0.27023,0.29073,0.30614,0.25179,0.23277,0.25179,0.24338,0.26057,0.25246,0.25606,0.28166,0.37114,0.49765,0.5589,0.47003,0.27898,0.15778,0.23122,0.47511,0.72391,0.88524,0.93671,0.924,0.88428,0.84488,0.82751,0.89462,0.97711,0.99821,0.99286,0.97043,0.93471,0.89771,0.86952,0.84915,0.81525,0.77245,0.90886,0.74113,0.32341,0.27496,0.28363,0.29161,0.31006,0.31097,0.51155,0.86745,0.87077,0.79187,0.74503,0.80962,0.86322,0.72571,0.25691,0.53911,0.54662,0.49478,0.69609,0.6916,0.58908,0.65005,0.65756,0.61606,0.64891,0.58804,0.56541,0.50569,0.49615,0.53125,0.56058,0.61861,0.62306,0.58746,0.57001,0.50928,0.483,0.52731,0.56432,0.54831,0.52586,0.56377,0.62636,0.65942,0.66924,0.65237,0.64795,0.58333,0.57768,0.52835,0.50008,0.54968,0.59698,0.54146,0.42145,0.27296,0.44698,0.93788,0.94681,0.76392,0.76025,0.6763,0.754,0.78317,0.78268,0.8924,0.96242,0.99435,0.99651,0.99614,0.99615,0.9888,0.98761,0.98814,0.9901,0.99406,0.99263,0.99214,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99219,0.99223,0.99188,0.9888,0.99188,0.99219,0.99258,0.99414,0.99574,0.99588,0.99245,0.99214,0.99205,0.9937,0.99458,0.99646,0.99379,0.98888,0.99553,0.99637,0.99396,0.99396,0.99628,0.99609,0.99609,0.99609,0.99609,0.99641,0.99469,0.97043,0.91405,0.86459,0.84021,0.82809,0.81,0.78026,0.75749,0.73924,0.7079,0.68442,0.66901,0.64526,0.63171,0.61201,0.60313,0.58525,0.57721,0.56088,0.55354,0.54155,0.52893,0.52036,0.52068,0.5049,0.50244,0.49861,0.50014,0.49969,0.49661,0.49965,0.50035,0.50339,0.50031,0.49995,0.50009,0.49902,0.49654,0.51332,0.5275,0.53264,0.55217,0.56699,0.56195,0.56584,0.56332,0.56975,0.56999,0.57388,0.58826,0.59785,0.59853,0.60815,0.60759,0.61191,0.61534,0.61174,0.60306,0.59962,0.6069,0.62556,0.64784,0.67482,0.73322,0.77428,0.80232,0.80067,0.79172,0.76988,0.73027,0.7186,0.71266,0.70958,0.69777,0.69923,0.69331,0.68646,0.70572,0.71526,0.72049,0.72202,0.73235,0.73553,0.7561,0.7641,0.80109,0.8015,0.80162,0.80453,0.79614,0.79721,0.80704,0.8007,0.77216,0.74184,0.72655,0.73546,0.73486,0.73436,0.73982,0.74904,0.77112,0.77864,0.78261,0.79489,0.80069,0.80742,0.82326,0.83107,0.85165,0.87108,0.87943,0.8763,0.86943,0.87222,0.86598,0.86346,0.85881,0.8483,0.84804,0.85522,0.85318,0.84389,0.83414,0.81549,0.80968,0.79536,0.78209,0.76854,0.77745,0.8185,0.79692,0.81609,0.83578,0.86356,0.88881,0.894,0.90215,0.90012,0.90102,0.9202,0.91524,0.92165,0.93141,0.92598,0.91354,0.89522,0.88643,0.88544,0.89967,0.91571,0.93021,0.93341,0.92107,0.91356,0.91193,0.9133,0.89905,0.89044,0.88434,0.87151,0.85414,0.83463,0.825,0.82224,0.83191,0.83617,0.83784,0.8401,0.84531,0.84981,0.84593,0.83984,0.8344,0.82414,0.80862,0.79863,0.79633,0.80043,0.80284,0.79771,0.79465,0.79373,0.80721,0.82617,0.82681,0.82158,0.8075,0.78882,0.77979,0.7708,0.75209,0.73251,0.71127,0.69765,0.69147,0.6787,0.65356,0.63849,0.62491,0.61295,0.592,0.58113,0.57489,0.56592,0.55681,0.55281,0.5352,0.51756,0.5063,0.49571,0.4774,0.46266,0.43149,0.40912,0.39156,0.39207,0.39833,0.39407,0.37752,0.36705,0.35786,0.34926,0.33823,0.33641,0.32178,0.30614,0.31616,0.31512,0.31512,0.31616,0.30614,0.32178,0.33641,0.33823,0.34926,0.35786,0.36705,0.37752,0.39407,0.39833,0.39207,0.39156,0.40912,0.43149

};
int main() {
	int x,y,n;
	unsigned char *data = NULL;

#ifdef USESTB
	unsigned char * readImg = stbi_load("../../../../common/despicable-124_018.jpg", &x, &y, &n, 0);

	data = (unsigned char * )malloc( 1024 * 1080 * 3 * sizeof(unsigned char));

	stbir_resize_uint8(readImg, x, y, 0,
	                   data, 1024, 1080, 1024* 3, 3);
	x = 1024;

	FILE * fo = fopen("raw_img.dat","wb");
	fwrite( data, sizeof(char) , 3*1024*1080, fo);
	fclose(fo);
#else
#if 1
	x = 1024;
	y = 1080;
	n = 3;
//	FILE * fi = fopen("raw_img.dat","rb");
//	printf("F : %x\n", fi);
//	data = (unsigned char*)malloc( x*y*n * sizeof(unsigned char));
//	fread( data, sizeof(char) , n*x*y, fi);
//	fclose(fi);
#endif


#endif



#define IMG_WIDTH    512

	hls::stream<cmpxDataIn> img;
	//cmpxDataIn img2[IMG_WIDTH];
	//cmpxDataIn img3[IMG_WIDTH];
	hls::stream<t_pyr_complex> pyrFilOut;
	hls::stream<t_pyr_complex> pyrFilOut2;
	hls::stream<t_pyr_complex> pyrFilOut3;


	for(int i=0;i<IMG_WIDTH;i++) {
		//ap_fixed< 9,1> Val;
		//unsigned char datIn = data[i*3 + x * 3 * 60];
		//Val.range(8,0) = datIn;
		cmpxDataIn tmp  (in512[i],0);
		cmpxDataIn tmp2 (in1[i],0);
		cmpxDataIn tmp3 (in2[i],0);
		//img[i].real() = Val;
		//img[i].imag() = 0;
		img.write(tmp);
		//img2[i]=tmp2;
		//img3[i]=tmp3;
	}
	pyrcon_top(img, pyrFilOut,  512);
	//pyrcon_top(img2, pyrFilOut2,  512);
	//pyrcon_top(img3, pyrFilOut3,  512);
	FILE * fo = fopen("pyr_out.txt", " wb");
	for(int i=0;i<1520;i++)
	//for(int i=0;i<2992;i++)
	//while(!pyrFilOut.empty())
	{
		t_pyr_complex val = pyrFilOut.read();
		//t_pyr_complex val2 = pyrFilOut2.read();
		//t_pyr_complex val3 = pyrFilOut3.read();

		//std::cout << val << std::endl;
		//fprintf(fo, "%.8f %.8f   %.8f %.8f   %.8f %.8f\n", val.real().to_float(), val.imag().to_float(),val2.real().to_float(), val2.imag().to_float(),val3.real().to_float(), val3.imag().to_float());
		fprintf(fo, "%.8f  %.8f\n", val.real().to_float(), val.imag().to_float());

		printf( "%.8f  %.8f\n", val.real().to_float(), val.imag().to_float());
	}
	fclose(fo);
#if 0

	fo = fopen("pyr_out.bin", " wb");
	for(int j=0;j<1080;j++) {
		printf("%d\n", j);
		for(int c=0;c<3;c++) {
			for(int i=0;i<IMG_WIDTH;i++) {
				ap_fixed< 9,1> Val;
				unsigned char datIn = data[i*3 + x * 3 * j + c];
				Val.range(8,0) = datIn;
				img[i].real() = Val;
				img[i].imag() = 0;
			}
			pyrconstuct_top(img, pyrFilOut, 512);
			//for(int i=0;i<1520;i++) {
			float tmp_out[2992*2];
			for(int i=0;i<2992;i++) {
				t_pyr_complex val = pyrFilOut.read();
				tmp_out[i*2] = val.real().to_float();
				tmp_out[i*2+1] = val.imag().to_float();
				//std::cout << val << std::endl;
//				fprintf(fo, "%.8f %.8f\n", val.real().to_float(), val.imag().to_float());

			}
			fwrite( tmp_out, 2992*2 , sizeof(float), fo);
		}
	}
	fclose(fo);
#endif


	return 0;
}

